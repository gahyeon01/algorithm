(1)배열과 리스트
배열은 메모리의 연속 공간에 값이 채워져 있느 형태의 자료구조
배열의 값은 인덱스를 통해 참조할 수 있으며, 선언한 자료형의 값만 저장할 수 있음.
-배열의 특징
1) 인덱스를 사용하여 값에 바로 접근할 수 있다.
2) 새로운 값을 삽입하거나 특정 인덱스에 있는 값을 삭제하기 어렵다. 값을 삽입하거나 삭제하려면
   해당 인덱스 주변에 있는 값을 이동시키는 과정이 필요하다.
   [1][2][3][4] -> [1][3][4]이런식이 불가능
3) 배열의 크기는 선언할 때 지정할 수 있으며, 한 번 선언하면 크기를 늘리거나 줄일 수 없다.
   예) A[10]
4) 구조가 간단하므로 코딩 테스트에서 많이 사용한다.

리스트는 값과 포인터를 묶은 노드라는 것을 포인터로 연결한 자료구조.
즉, 값과 다음 값(노드)이 무엇인지 가리키는 포인터

-리스트의 특징
1) 인덱스가 없으므로 값에 접근하려면 Head포인터부터 순서대로 접근해야 한다. 다시 말해 값에
   접근하는 속도가 느리다.
2) 포인터로 연결되어 있으므로 데이터를 삽입하거나 삭제하는 연산 속도가 빠르다.
3) 선언할 때 크기를 별도로 지정하지 않아도 된다. 다시 말해 리스트의 크기는 정해져 있지 않으며,
   크기가 변하기 쉬운 데이터를 다룰 때 적절하다.
4) 포인터를 저장할 공간이 필요하므로 배열보다 구조가 복잡하다.

(2) 구간합
구간합이란 합 배열을 이용하여 시간 복잡도를 더 줄이기 위해 사용하는 특수한 목적의 알고리즘.
합 배열 S의 정의
S[i] = A[0] + A[1] + A[2] + ... + A[i-1] + A[i] // A[0]부터 A[i]까지의 합

합 배열 S를 만드는 공식
S[i] = S[i-1] + A[i]

그렇다면, 한 배열에 대하여 i에서 j까지의 구간합을 구하고 싶다면?
구간합을 구하는 공식-> S[j] - S[i-1]

(2) 스택과 큐
스택과 큐는 배열에서 발전된 형태의 자료구조로, 스택과 큐느 구조는 비슷하지만 처리 방식은 다름.
스택은 삽입과 삭제 연산이 후입선출로 이뤄지는 자료구조이다.
후입선출은 삽입과 삭제가 한 쪽에서만 일어나는 특징이 있다.
(후입선출-> 나중에 들어온 것이 나갈 때는 먼저 나가는 순으로 생각)
Last in First out(FILO)
스택은 깊이 우선 탐색(DFS: Depth First Search),백트래킹 종류의 코딩 테스트에 효과적이므로
알아두어야 한다.
-스택 용어
<위치>
top:  삽입과 삭제가 일어나는 위치를 뜻한다.
<연산>
push: top 위치에 새로운 데이터를 삽입하는 연산이다.
pop: top 위치에 현재 있는 데이터를 삭제하고 확인하는 연산이다.
peek: top 위치에 현재 있는 데이터를 단순 확인하는 연산이다.
=====================================================
큐는 삽입과 삭제 연산이 선입선출(FIFO: First-in First-out)로 이뤄지는 자료구조로,
스택과 다르게 먼저 들어온 데이터가 먼저 나가게 된다.
그래서 삽입과 삭제가 양방향에서 이뤄진다.

add -> [rear] ... [front] -> front
rear: 큐에서 가장 끝 데이터를 가리키는 영역이다.
front: 큐에서 가장 앞의 데이터를 가리키는 영역이다.
add: rear 부분에서 새로운 데이터를 삽입하는 연산이다.
poll: front 부분에 있는 데이터를 삭제하고 확인하는 연산이다.
peek: 큐의 맨 앞(front)에 있는 데이터를 확인할 때 사용하는 연산이다.

큐는 너비우선탐색에서 자주 사용하므로 잘 알아두어야 한다.

우선순위 큐는 값이 들어간 순서와 상관없이 우선순위가 높은 데이터가 먼저 나오는 자료구조이다.
큐 설정에 따라 front에 항상 최댓값 또는 최솟값이 위치한다.
